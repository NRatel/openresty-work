user nratel;                    # 指定nginx用户
pid tmp/nginx.pid;              # 指定worker进程ID保存文件的位置
worker_processes 1;             # 指定worker进程数
error_log logs/error.log;       # 指定错误日志位置

events {
    worker_connections 1024;    # 每个工作进程的最大连接数
}

http {
    include ./mime.types;       # 根据请求文件的后缀名，匹配决定HTTP Response的Content-Type

    sendfile on;                # 设置为on表示启动高效传输文件的模式  
    keepalive_timeout 65;       # 完成请求后保持连接
    charset utf-8;              # 字符编码
    lua_code_cache off;         # lua代码缓存,off方便热调试,生产环境需设为on
    
    lua_package_path '${prefix}/app/lualib/?.lua;;';        # 设置Lua扩展库的搜寻路径(';;' 中的空，指默认路径, 指从${prefix}开始查找)
    lua_package_cpath '${prefix}/app/luaclib/?.so;;';       # 设置C编写的Lua扩展模块的搜寻路径(';;' 中的空，指默认路径, 指从${prefix}开始查找)

    init_by_lua_file            ./app/phase/init.lua;
    init_worker_by_lua_file     ./app/phase/init_worker.lua;

    server {                    # 定义虚拟主机
        listen 81;              # 监听端口。游戏服不占用80端口
        server_name game-dev;   # 监听域名。虚拟服务器的识别路径
        
        location /game {
            set_by_lua_file                 $a ./app/phase/set.lua;      #根据传入变量做不同处理，类似于加宏
            rewrite_by_lua_file             ./app/phase/rewrite.lua;
            access_by_lua_file              ./app/phase/access.lua;

            content_by_lua_file             ./app/phase/content.lua;         
            header_filter_by_lua_file       ./app/phase/header_filter.lua;   
            body_filter_by_lua_file         ./app/phase/body_filter.lua;

            log_by_lua_file                 ./app/phase/log.lua;   
        }
    }    
}